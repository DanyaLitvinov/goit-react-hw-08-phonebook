{"version":3,"file":"static/js/344.fc78562b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/Contacts/ContactsSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  margin-top: 50px;\n  align-items: center;\n`\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\n  font-weight: bold;\n  position: relative;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  background-color: green;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  width: 150px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: darkgreen;\n  }\n`\n\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const setContacts = state => state.contacts.items;\nexport const setFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [setContacts, setFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setContacts } from '../../redux/Contacts/ContactsSelectors';\nimport { addContact } from '../../redux/Contacts/ContactsOperations';\n\n\nconst ContactForm = () => {\n  const [dirtyName, setDirtyName] = useState(false)\n  const [dirtyNumber, setDirtyNumber] = useState(false)\n  const [nameError, setNameError] = useState(\"Name couldn't be empty\")\n  const [numberError, setNumberError] = useState(\"Number couldn't be empty\")\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n  const [valid, setValid] = useState(false);\n\n\n  const contacts = useSelector(setContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeName = (e) => {\n    const {name, value} = e.target;\n    switch (name) {\n      case 'name':\n        setFormData(prevData => ({ ...prevData, [name]: value }));\n        setDirtyName(true)\n        break;\n      default:\n        return;\n    }\n    const validationForName = /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n    if (!validationForName.test(String(e.target.value).toLowerCase())) {\n      setNameError(\"Incorrect Name\")\n    } else {\n      setNameError(\"\")\n    }\n  }\n  const handleChangeNumber = (e) => {\n    const {name, value} = e.target;\n    switch (name) {\n      case 'number':\n        setFormData(prevData => ({ ...prevData, [name]: value }));\n        setDirtyNumber(true)\n        break;\n\n      default:\n        return;\n    }\n    const validationForNumber = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/\n    if (!validationForNumber.test(String(e.target.value).toLowerCase())) {\n      setNumberError(\"Incorrect Number\")\n    } else {\n      setNumberError(\"\")\n    }\n  }\n\n\n  useEffect(()=>{\n    if (nameError || numberError){\n      setValid(false)\n    }\n    else {\n      setValid(true)\n    }\n\n  },[nameError, numberError])\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isInContacts = contacts?.some(\n      ({ name }) => name.toLowerCase() === formData.name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      return alert(`${formData.name} is already in contacts`);\n    }\n\n    dispatch(addContact(formData));\n\n    setFormData({ name: '', number: '' });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name:  {(dirtyName && nameError) && <div style={{ color: 'red' }}>{nameError}</div>}\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChangeName}\n          required\n          autoComplete={\"off\"}\n          placeholder={'Andrew or Andrew Galardo'}\n        />\n      </Label>\n      <Label>\n        Number: {(dirtyNumber && numberError) && <div style={{ color: 'red' }}>{numberError}</div>}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={formData.number}\n          onChange={handleChangeNumber}\n          required\n          autoComplete={\"off\"}\n          placeholder={\"123-456-7890\"}\n        />\n      </Label>\n      <Button disabled={!valid} type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column; \nmargin-bottom: 8px; \nfont-weight: bold; \n`\n\nexport const Input = styled.input`\nmargin-top: 8px;\nwidth: 300px;\npadding: 4px;\n`\n\n","import React from 'react';\nimport { Label, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actionFilter } from '../../redux/Filters/FilterSlice';\nimport { setFilter } from '../../redux/Contacts/ContactsSelectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(setFilter);\n\n\n  const handleChange = e => {\n    dispatch(actionFilter(e.target.value));\n  };\n\n\n  return (\n    <Label>\n      Find contacts by name:\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={handleChange}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;","import React, { useEffect } from 'react';\nimport { List, Item, Button } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/Contacts/ContactsSelectors';\nimport { fetchContacts, deleteContact } from '../../redux/Contacts/ContactsOperations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {filteredContacts.map((contact) => (\n        <Item key={contact.id}>\n          {contact.name}: {contact.number}\n          <Button type=\"button\" onClick={() =>  dispatch(deleteContact(contact.id))}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  )\n}\n\nexport default ContactList;","import React from 'react';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { FormContainer } from '../../components/ContactForm/ContactForm.styled';\n\nconst Contacts = () => {\n  return (\n    <FormContainer>\n      <ContactForm/>\n        <h2>Contacts</h2>\n        <p>Find contacts by name</p>\n        <Filter/>\n        <ContactList/>\n    </FormContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Label","_templateObject3","Button","_templateObject4","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","setContacts","state","contacts","items","setFilter","filter","selectFilteredContacts","contact","toLowerCase","includes","trim","_useState","useState","_useState2","_slicedToArray","dirtyName","setDirtyName","_useState3","_useState4","dirtyNumber","setDirtyNumber","_useState5","_useState6","nameError","setNameError","_useState7","_useState8","numberError","setNumberError","_useState9","number","_useState10","formData","setFormData","_useState11","_useState12","valid","setValid","useSelector","dispatch","useDispatch","useEffect","_jsxs","onSubmit","event","preventDefault","some","_ref","alert","addContact","children","_jsx","style","color","type","onChange","e","_e$target","target","prevData","_objectSpread","_defineProperty","test","String","required","autoComplete","placeholder","_e$target2","disabled","Input","filterValue","actionFilter","filteredContacts","fetchContacts","List","Item","onClick","deleteContact","id","ContactForm","Filter","ContactList"],"sourceRoot":""}